; DO NOT MODIFY.
;
; This file was automatically generated.

#lang rosette

(provide (all-defined-out))

(require (prefix-in core: serval/lib/core)
         serval/llvm
         serval/ubsan)

(define-global @funcs)

(define (@rv_add %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00000033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_addi %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00000013 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_sub %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x40000033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_and %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00007033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_andi %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00007013 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_or %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00006033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_ori %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00006013 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_xor %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00004033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_xori %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00004013 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_mul %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x02000033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_mulhu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x02003033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_sll %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00001033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_slli %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00001013 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_srl %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00005033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_srli %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00005013 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_sra %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x40005033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_srai %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (or %2 (bv #x0400 16)))
    (set! %5 (zext %4 (bitvector 32)))
    (set! %6 (shl %5 (bv #x00000014 32)))
    (set! %7 (zext %1 (bitvector 32)))
    (set! %8 (shl %7 (bv #x0000000f 32)))
    (set! %9 (zext %0 (bitvector 32)))
    (set! %10 (shl %9 (bv #x00000007 32)))
    (set! %11 (or %10 %8))
    (set! %12 (or %11 %6))
    (set! %13 (or %12 (bv #x00005013 32)))
    (ret %13))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (enter! %3))

(define (@rv_divu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x02005033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_remu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x02007033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_sltu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00003033 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_lui %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x0000000c 32)))
    (set! %4 (zext %0 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000007 32)))
    (set! %6 (or %3 %5))
    (set! %7 (or %6 (bv #x00000037 32)))
    (ret %7))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (enter! %2))

(define (@rv_auipc %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x0000000c 32)))
    (set! %4 (zext %0 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000007 32)))
    (set! %6 (or %3 %5))
    (set! %7 (or %6 (bv #x00000017 32)))
    (ret %7))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (enter! %2))

(define (@rv_jal %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (and %1 (bv #x00080000 32)))
    (set! %4 (shl %1 (bv #x00000009 32)))
    (set! %5 (and %4 (bv #x0007fe00 32)))
    (set! %6 (or %5 %3))
    (set! %7 (lshr %1 (bv #x00000002 32)))
    (set! %8 (and %7 (bv #x00000100 32)))
    (set! %9 (or %6 %8))
    (set! %10 (lshr %1 (bv #x0000000b 32)))
    (set! %11 (and %10 (bv #x000000ff 32)))
    (set! %12 (or %9 %11))
    (set! %13 (shl %12 (bv #x0000000c 32)))
    (set! %14 (zext %0 (bitvector 32)))
    (set! %15 (shl %14 (bv #x00000007 32)))
    (set! %16 (or %15 %13))
    (set! %17 (or %16 (bv #x0000006f 32)))
    (ret %17))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (enter! %2))

(define (@rv_jalr %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x00000067 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_beq %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %1 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %0 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %19 %17))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00000063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_bltu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %1 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %0 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %19 %17))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00006063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_bgtu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %0 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %1 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %17 %19))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00006063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_bgeu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %1 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %0 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %19 %17))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00007063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_bleu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %0 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %1 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %17 %19))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00007063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_bne %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %1 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %0 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %19 %17))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00001063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_blt %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %1 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %0 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %19 %17))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00004063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_bgt %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %0 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %1 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %17 %19))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00004063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_bge %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %1 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %0 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %19 %17))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00005063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_ble %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (lshr %4 (bv #x00000005 32)))
    (set! %6 (and %5 (bv #x00000040 32)))
    (set! %7 (lshr %4 (bv #x00000004 32)))
    (set! %8 (and %7 (bv #x0000003f 32)))
    (set! %9 (or %6 %8))
    (set! %10 (shl %4 (bv #x00000001 32)))
    (set! %11 (and %10 (bv #x0000001e 32)))
    (set! %12 (lshr %4 (bv #x0000000a 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %9 (bv #x00000019 32)))
    (set! %16 (zext %0 (bitvector 32)))
    (set! %17 (shl %16 (bv #x00000014 32)))
    (set! %18 (zext %1 (bitvector 32)))
    (set! %19 (shl %18 (bv #x0000000f 32)))
    (set! %20 (shl %14 (bv #x00000007 32)))
    (set! %21 (or %17 %19))
    (set! %22 (or %21 %15))
    (set! %23 (or %22 %20))
    (set! %24 (or %23 (bv #x00005063 32)))
    (ret %24))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (define-value %23)
  (define-value %24)
  (enter! %3))

(define (@rv_sb %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (lshr %1 (bv #x0005 16)))
    (set! %5 (trunc %1 (bitvector 8)))
    (set! %6 (and %5 (bv #x1f 8)))
    (set! %7 (zext %4 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000019 32)))
    (set! %9 (zext %2 (bitvector 32)))
    (set! %10 (shl %9 (bv #x00000014 32)))
    (set! %11 (zext %0 (bitvector 32)))
    (set! %12 (shl %11 (bv #x0000000f 32)))
    (set! %13 (zext %6 (bitvector 32)))
    (set! %14 (shl %13 (bv #x00000007 32)))
    (set! %15 (or %12 %8))
    (set! %16 (or %15 %10))
    (set! %17 (or %16 %14))
    (set! %18 (or %17 (bv #x00000023 32)))
    (ret %18))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (enter! %3))

(define (@rv_sh %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (lshr %1 (bv #x0005 16)))
    (set! %5 (trunc %1 (bitvector 8)))
    (set! %6 (and %5 (bv #x1f 8)))
    (set! %7 (zext %4 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000019 32)))
    (set! %9 (zext %2 (bitvector 32)))
    (set! %10 (shl %9 (bv #x00000014 32)))
    (set! %11 (zext %0 (bitvector 32)))
    (set! %12 (shl %11 (bv #x0000000f 32)))
    (set! %13 (zext %6 (bitvector 32)))
    (set! %14 (shl %13 (bv #x00000007 32)))
    (set! %15 (or %12 %8))
    (set! %16 (or %15 %10))
    (set! %17 (or %16 %14))
    (set! %18 (or %17 (bv #x00001023 32)))
    (ret %18))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (enter! %3))

(define (@rv_sw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (lshr %1 (bv #x0005 16)))
    (set! %5 (trunc %1 (bitvector 8)))
    (set! %6 (and %5 (bv #x1f 8)))
    (set! %7 (zext %4 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000019 32)))
    (set! %9 (zext %2 (bitvector 32)))
    (set! %10 (shl %9 (bv #x00000014 32)))
    (set! %11 (zext %0 (bitvector 32)))
    (set! %12 (shl %11 (bv #x0000000f 32)))
    (set! %13 (zext %6 (bitvector 32)))
    (set! %14 (shl %13 (bv #x00000007 32)))
    (set! %15 (or %12 %8))
    (set! %16 (or %15 %10))
    (set! %17 (or %16 %14))
    (set! %18 (or %17 (bv #x00002023 32)))
    (ret %18))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (enter! %3))

(define (@rv_lbu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %1 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %2 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %5))
    (set! %11 (or %10 %7))
    (set! %12 (or %11 (bv #x00004003 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_lhu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %1 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %2 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %5))
    (set! %11 (or %10 %7))
    (set! %12 (or %11 (bv #x00005003 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_lw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %1 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %2 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %5))
    (set! %11 (or %10 %7))
    (set! %12 (or %11 (bv #x00002003 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_amoadd_w %0 %1 %2 %3 %4)
; %5
  (define-label (%5) #:merge #f
    (set! %6 (shl %3 (bv #x01 8)))
    (set! %7 (or %6 %4))
    (set! %8 (zext %7 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000019 32)))
    (set! %10 (zext %1 (bitvector 32)))
    (set! %11 (shl %10 (bv #x00000014 32)))
    (set! %12 (zext %2 (bitvector 32)))
    (set! %13 (shl %12 (bv #x0000000f 32)))
    (set! %14 (zext %0 (bitvector 32)))
    (set! %15 (shl %14 (bv #x00000007 32)))
    (set! %16 (or %15 %11))
    (set! %17 (or %16 %13))
    (set! %18 (or %17 %9))
    (set! %19 (or %18 (bv #x0000202f 32)))
    (ret %19))

  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (enter! %5))

(define (@rvc_mv %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (zext %0 (bitvector 16)))
    (set! %4 (shl %3 (bv #x0007 16)))
    (set! %5 (zext %1 (bitvector 16)))
    (set! %6 (shl %5 (bv #x0002 16)))
    (set! %7 (or %4 %6))
    (set! %8 (or %7 (bv #x8002 16)))
    (ret %8))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (enter! %2))

(define (@rvc_add %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (zext %0 (bitvector 16)))
    (set! %4 (shl %3 (bv #x0007 16)))
    (set! %5 (zext %1 (bitvector 16)))
    (set! %6 (shl %5 (bv #x0002 16)))
    (set! %7 (or %4 %6))
    (set! %8 (or %7 (bv #x9002 16)))
    (ret %8))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (enter! %2))

(define (@rvc_jalr %0)
; %1
  (define-label (%1) #:merge #f
    (set! %2 (zext %0 (bitvector 16)))
    (set! %3 (shl %2 (bv #x0007 16)))
    (set! %4 (or %3 (bv #x9002 16)))
    (ret %4))

  (define-value %2)
  (define-value %3)
  (define-value %4)
  (enter! %1))

(define (@rvc_jr %0)
; %1
  (define-label (%1) #:merge #f
    (set! %2 (zext %0 (bitvector 16)))
    (set! %3 (shl %2 (bv #x0007 16)))
    (set! %4 (or %3 (bv #x8002 16)))
    (ret %4))

  (define-value %2)
  (define-value %3)
  (define-value %4)
  (enter! %1))

(define (@rvc_addi %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x00000007 32)))
    (set! %4 (and %3 (bv #x00001000 32)))
    (set! %5 (shl %1 (bv #x00000002 32)))
    (set! %6 (and %5 (bv #x0000007c 32)))
    (set! %7 (zext %0 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000007 32)))
    (set! %9 (or %4 %8))
    (set! %10 (or %9 %6))
    (set! %11 (trunc %10 (bitvector 16)))
    (set! %12 (or %11 (bv #x0001 16)))
    (ret %12))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %2))

(define (@rvc_addiw %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x00000007 32)))
    (set! %4 (and %3 (bv #x00001000 32)))
    (set! %5 (shl %1 (bv #x00000002 32)))
    (set! %6 (and %5 (bv #x0000007c 32)))
    (set! %7 (zext %0 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000007 32)))
    (set! %9 (or %4 %8))
    (set! %10 (or %9 %6))
    (set! %11 (trunc %10 (bitvector 16)))
    (set! %12 (or %11 (bv #x2001 16)))
    (ret %12))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %2))

(define (@rvc_li %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x00000007 32)))
    (set! %4 (and %3 (bv #x00001000 32)))
    (set! %5 (shl %1 (bv #x00000002 32)))
    (set! %6 (and %5 (bv #x0000007c 32)))
    (set! %7 (zext %0 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000007 32)))
    (set! %9 (or %4 %8))
    (set! %10 (or %9 %6))
    (set! %11 (trunc %10 (bitvector 16)))
    (set! %12 (or %11 (bv #x4001 16)))
    (ret %12))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %2))

(define (@rvc_lui %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x00000007 32)))
    (set! %4 (and %3 (bv #x00001000 32)))
    (set! %5 (shl %1 (bv #x00000002 32)))
    (set! %6 (and %5 (bv #x0000007c 32)))
    (set! %7 (zext %0 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000007 32)))
    (set! %9 (or %4 %8))
    (set! %10 (or %9 %6))
    (set! %11 (trunc %10 (bitvector 16)))
    (set! %12 (or %11 (bv #x6001 16)))
    (ret %12))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %2))

(define (@rvc_addi16sp %0)
; %1
  (define-label (%1) #:merge #f
    (set! %2 (lshr %0 (bv #x00000004 32)))
    (set! %3 (and %2 (bv #x00000020 32)))
    (set! %4 (and %0 (bv #x00000010 32)))
    (set! %5 (or %3 %4))
    (set! %6 (lshr %0 (bv #x00000003 32)))
    (set! %7 (and %6 (bv #x00000008 32)))
    (set! %8 (or %5 %7))
    (set! %9 (lshr %0 (bv #x00000006 32)))
    (set! %10 (and %9 (bv #x00000006 32)))
    (set! %11 (or %8 %10))
    (set! %12 (lshr %0 (bv #x00000005 32)))
    (set! %13 (and %12 (bv #x00000001 32)))
    (set! %14 (or %11 %13))
    (set! %15 (shl %3 (bv #x00000007 32)))
    (set! %16 (shl %14 (bv #x00000002 32)))
    (set! %17 (and %16 (bv #x0000007c 32)))
    (set! %18 (or %17 %15))
    (set! %19 (trunc %18 (bitvector 16)))
    (set! %20 (or %19 (bv #x6101 16)))
    (ret %20))

  (define-value %2)
  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (enter! %1))

(define (@rvc_addi4spn %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x00000002 32)))
    (set! %4 (and %3 (bv #x000000c0 32)))
    (set! %5 (lshr %1 (bv #x00000004 32)))
    (set! %6 (and %5 (bv #x0000003c 32)))
    (set! %7 (or %4 %6))
    (set! %8 (lshr %1 (bv #x00000001 32)))
    (set! %9 (and %8 (bv #x00000002 32)))
    (set! %10 (or %7 %9))
    (set! %11 (lshr %1 (bv #x00000003 32)))
    (set! %12 (and %11 (bv #x00000001 32)))
    (set! %13 (or %10 %12))
    (set! %14 (shl %13 (bv #x00000005 32)))
    (set! %15 (shl %0 (bv #x02 8)))
    (set! %16 (and %15 (bv #x1c 8)))
    (set! %17 (zext %16 (bitvector 32)))
    (set! %18 (or %14 %17))
    (set! %19 (trunc %18 (bitvector 16)))
    (ret %19))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (enter! %2))

(define (@rvc_lwsp %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (lshr %1 (bv #x00000006 32)))
    (set! %4 (and %3 (bv #x00000003 32)))
    (set! %5 (and %1 (bv #x0000003c 32)))
    (set! %6 (or %4 %5))
    (set! %7 (shl %5 (bv #x00000007 32)))
    (set! %8 (and %7 (bv #x00001000 32)))
    (set! %9 (shl %6 (bv #x00000002 32)))
    (set! %10 (and %9 (bv #x0000007c 32)))
    (set! %11 (zext %0 (bitvector 32)))
    (set! %12 (shl %11 (bv #x00000007 32)))
    (set! %13 (or %8 %12))
    (set! %14 (or %13 %10))
    (set! %15 (trunc %14 (bitvector 16)))
    (set! %16 (or %15 (bv #x4002 16)))
    (ret %16))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (enter! %2))

(define (@rvc_swsp %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (and %0 (bv #x0000003c 32)))
    (set! %4 (lshr %0 (bv #x00000006 32)))
    (set! %5 (and %4 (bv #x00000003 32)))
    (set! %6 (or %5 %3))
    (set! %7 (shl %6 (bv #x00000007 32)))
    (set! %8 (zext %1 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000002 32)))
    (set! %10 (or %7 %9))
    (set! %11 (trunc %10 (bitvector 16)))
    (set! %12 (or %11 (bv #xc002 16)))
    (ret %12))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %2))

(define (@rvc_ld %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (shl %1 (bv #x00000007 32)))
    (set! %5 (and %4 (bv #x00001c00 32)))
    (set! %6 (and %2 (bv #x07 8)))
    (set! %7 (zext %6 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000007 32)))
    (set! %9 (lshr %1 (bv #x00000001 32)))
    (set! %10 (and %9 (bv #x00000060 32)))
    (set! %11 (shl %0 (bv #x02 8)))
    (set! %12 (and %11 (bv #x1c 8)))
    (set! %13 (zext %12 (bitvector 32)))
    (set! %14 (or %5 %10))
    (set! %15 (or %14 %13))
    (set! %16 (or %15 %8))
    (set! %17 (trunc %16 (bitvector 16)))
    (set! %18 (or %17 (bv #x6000 16)))
    (ret %18))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (enter! %3))

(define (@rvc_lw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (lshr %1 (bv #x00000001 32)))
    (set! %5 (and %4 (bv #x00000002 32)))
    (set! %6 (lshr %1 (bv #x00000006 32)))
    (set! %7 (and %6 (bv #x00000001 32)))
    (set! %8 (or %5 %7))
    (set! %9 (shl %1 (bv #x00000007 32)))
    (set! %10 (and %9 (bv #x00001c00 32)))
    (set! %11 (and %2 (bv #x07 8)))
    (set! %12 (zext %11 (bitvector 32)))
    (set! %13 (shl %12 (bv #x00000007 32)))
    (set! %14 (shl %8 (bv #x00000005 32)))
    (set! %15 (shl %0 (bv #x02 8)))
    (set! %16 (and %15 (bv #x1c 8)))
    (set! %17 (zext %16 (bitvector 32)))
    (set! %18 (or %10 %17))
    (set! %19 (or %18 %14))
    (set! %20 (or %19 %13))
    (set! %21 (trunc %20 (bitvector 16)))
    (set! %22 (or %21 (bv #x4000 16)))
    (ret %22))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (enter! %3))

(define (@rvc_sd %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (shl %1 (bv #x00000007 32)))
    (set! %5 (and %4 (bv #x00001c00 32)))
    (set! %6 (and %0 (bv #x07 8)))
    (set! %7 (zext %6 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000007 32)))
    (set! %9 (lshr %1 (bv #x00000001 32)))
    (set! %10 (and %9 (bv #x00000060 32)))
    (set! %11 (shl %2 (bv #x02 8)))
    (set! %12 (and %11 (bv #x1c 8)))
    (set! %13 (zext %12 (bitvector 32)))
    (set! %14 (or %5 %10))
    (set! %15 (or %14 %8))
    (set! %16 (or %15 %13))
    (set! %17 (trunc %16 (bitvector 16)))
    (set! %18 (or %17 (bv #xe000 16)))
    (ret %18))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (enter! %3))

(define (@rvc_sw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (lshr %1 (bv #x00000001 32)))
    (set! %5 (and %4 (bv #x00000002 32)))
    (set! %6 (lshr %1 (bv #x00000006 32)))
    (set! %7 (and %6 (bv #x00000001 32)))
    (set! %8 (or %5 %7))
    (set! %9 (shl %1 (bv #x00000007 32)))
    (set! %10 (and %9 (bv #x00001c00 32)))
    (set! %11 (and %0 (bv #x07 8)))
    (set! %12 (zext %11 (bitvector 32)))
    (set! %13 (shl %12 (bv #x00000007 32)))
    (set! %14 (shl %8 (bv #x00000005 32)))
    (set! %15 (shl %2 (bv #x02 8)))
    (set! %16 (and %15 (bv #x1c 8)))
    (set! %17 (zext %16 (bitvector 32)))
    (set! %18 (or %13 %10))
    (set! %19 (or %18 %14))
    (set! %20 (or %19 %17))
    (set! %21 (trunc %20 (bitvector 16)))
    (set! %22 (or %21 (bv #xc000 16)))
    (ret %22))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (define-value %20)
  (define-value %21)
  (define-value %22)
  (enter! %3))

(define (@rvc_ldsp %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (lshr %1 (bv #x00000006 32)))
    (set! %4 (and %3 (bv #x00000007 32)))
    (set! %5 (and %1 (bv #x00000038 32)))
    (set! %6 (or %4 %5))
    (set! %7 (shl %5 (bv #x00000007 32)))
    (set! %8 (and %7 (bv #x00001000 32)))
    (set! %9 (shl %6 (bv #x00000002 32)))
    (set! %10 (and %9 (bv #x0000007c 32)))
    (set! %11 (zext %0 (bitvector 32)))
    (set! %12 (shl %11 (bv #x00000007 32)))
    (set! %13 (or %8 %12))
    (set! %14 (or %13 %10))
    (set! %15 (trunc %14 (bitvector 16)))
    (set! %16 (or %15 (bv #x6002 16)))
    (ret %16))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (enter! %2))

(define (@rvc_sdsp %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (and %0 (bv #x00000038 32)))
    (set! %4 (lshr %0 (bv #x00000006 32)))
    (set! %5 (and %4 (bv #x00000007 32)))
    (set! %6 (or %5 %3))
    (set! %7 (shl %6 (bv #x00000007 32)))
    (set! %8 (zext %1 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000002 32)))
    (set! %10 (or %7 %9))
    (set! %11 (trunc %10 (bitvector 16)))
    (set! %12 (or %11 (bv #xe002 16)))
    (ret %12))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %2))

(define (@rvc_slli %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x00000007 32)))
    (set! %4 (and %3 (bv #x00001000 32)))
    (set! %5 (shl %1 (bv #x00000002 32)))
    (set! %6 (and %5 (bv #x0000007c 32)))
    (set! %7 (zext %0 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000007 32)))
    (set! %9 (or %4 %8))
    (set! %10 (or %9 %6))
    (set! %11 (trunc %10 (bitvector 16)))
    (set! %12 (or %11 (bv #x0002 16)))
    (ret %12))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %2))

(define (@rvc_srli %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x00000007 32)))
    (set! %4 (and %3 (bv #x00001000 32)))
    (set! %5 (shl %1 (bv #x00000002 32)))
    (set! %6 (and %5 (bv #x0000007c 32)))
    (set! %7 (and %0 (bv #x07 8)))
    (set! %8 (zext %7 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %4 %6))
    (set! %11 (or %10 %9))
    (set! %12 (trunc %11 (bitvector 16)))
    (set! %13 (or %12 (bv #x8001 16)))
    (ret %13))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (enter! %2))

(define (@rvc_srai %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x00000007 32)))
    (set! %4 (and %3 (bv #x00001000 32)))
    (set! %5 (shl %1 (bv #x00000002 32)))
    (set! %6 (and %5 (bv #x0000007c 32)))
    (set! %7 (and %0 (bv #x07 8)))
    (set! %8 (zext %7 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %4 %6))
    (set! %11 (or %10 %9))
    (set! %12 (trunc %11 (bitvector 16)))
    (set! %13 (or %12 (bv #x8401 16)))
    (ret %13))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (enter! %2))

(define (@rvc_andi %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (shl %1 (bv #x00000007 32)))
    (set! %4 (and %3 (bv #x00001000 32)))
    (set! %5 (shl %1 (bv #x00000002 32)))
    (set! %6 (and %5 (bv #x0000007c 32)))
    (set! %7 (and %0 (bv #x07 8)))
    (set! %8 (zext %7 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %4 %6))
    (set! %11 (or %10 %9))
    (set! %12 (trunc %11 (bitvector 16)))
    (set! %13 (or %12 (bv #x8801 16)))
    (ret %13))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (enter! %2))

(define (@rvc_sub %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (and %0 (bv #x07 8)))
    (set! %4 (zext %3 (bitvector 16)))
    (set! %5 (shl %4 (bv #x0007 16)))
    (set! %6 (shl %1 (bv #x02 8)))
    (set! %7 (and %6 (bv #x1c 8)))
    (set! %8 (zext %7 (bitvector 16)))
    (set! %9 (or %5 %8))
    (set! %10 (or %9 (bv #x8c01 16)))
    (ret %10))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (enter! %2))

(define (@rvc_xor %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (and %0 (bv #x07 8)))
    (set! %4 (zext %3 (bitvector 16)))
    (set! %5 (shl %4 (bv #x0007 16)))
    (set! %6 (shl %1 (bv #x02 8)))
    (set! %7 (and %6 (bv #x1c 8)))
    (set! %8 (zext %7 (bitvector 16)))
    (set! %9 (or %5 %8))
    (set! %10 (or %9 (bv #x8c21 16)))
    (ret %10))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (enter! %2))

(define (@rvc_or %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (and %0 (bv #x07 8)))
    (set! %4 (zext %3 (bitvector 16)))
    (set! %5 (shl %4 (bv #x0007 16)))
    (set! %6 (shl %1 (bv #x02 8)))
    (set! %7 (and %6 (bv #x1c 8)))
    (set! %8 (zext %7 (bitvector 16)))
    (set! %9 (or %5 %8))
    (set! %10 (or %9 (bv #x8c41 16)))
    (ret %10))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (enter! %2))

(define (@rvc_and %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (and %0 (bv #x07 8)))
    (set! %4 (zext %3 (bitvector 16)))
    (set! %5 (shl %4 (bv #x0007 16)))
    (set! %6 (shl %1 (bv #x02 8)))
    (set! %7 (and %6 (bv #x1c 8)))
    (set! %8 (zext %7 (bitvector 16)))
    (set! %9 (or %5 %8))
    (set! %10 (or %9 (bv #x8c61 16)))
    (ret %10))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (enter! %2))

(define (@rvc_subw %0 %1)
; %2
  (define-label (%2) #:merge #f
    (set! %3 (and %0 (bv #x07 8)))
    (set! %4 (zext %3 (bitvector 16)))
    (set! %5 (shl %4 (bv #x0007 16)))
    (set! %6 (shl %1 (bv #x02 8)))
    (set! %7 (and %6 (bv #x1c 8)))
    (set! %8 (zext %7 (bitvector 16)))
    (set! %9 (or %5 %8))
    (set! %10 (or %9 (bv #x9c01 16)))
    (ret %10))

  (define-value %3)
  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (enter! %2))

(define (@rv_addiw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x0000001b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_addw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x0000003b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_subw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x4000003b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_mulw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x0200003b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_divuw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x0200503b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_remuw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x0200703b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_sllw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x0000103b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_srlw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x0000503b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_sraw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x4000503b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_slliw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x0000101b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_srliw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %2 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %1 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %7))
    (set! %11 (or %10 %5))
    (set! %12 (or %11 (bv #x0000501b 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_sraiw %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (or %2 (bv #x0400 16)))
    (set! %5 (zext %4 (bitvector 32)))
    (set! %6 (shl %5 (bv #x00000014 32)))
    (set! %7 (zext %1 (bitvector 32)))
    (set! %8 (shl %7 (bv #x0000000f 32)))
    (set! %9 (zext %0 (bitvector 32)))
    (set! %10 (shl %9 (bv #x00000007 32)))
    (set! %11 (or %10 %8))
    (set! %12 (or %11 %6))
    (set! %13 (or %12 (bv #x0000501b 32)))
    (ret %13))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (enter! %3))

(define (@rv_sd %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (lshr %1 (bv #x0005 16)))
    (set! %5 (trunc %1 (bitvector 8)))
    (set! %6 (and %5 (bv #x1f 8)))
    (set! %7 (zext %4 (bitvector 32)))
    (set! %8 (shl %7 (bv #x00000019 32)))
    (set! %9 (zext %2 (bitvector 32)))
    (set! %10 (shl %9 (bv #x00000014 32)))
    (set! %11 (zext %0 (bitvector 32)))
    (set! %12 (shl %11 (bv #x0000000f 32)))
    (set! %13 (zext %6 (bitvector 32)))
    (set! %14 (shl %13 (bv #x00000007 32)))
    (set! %15 (or %12 %8))
    (set! %16 (or %15 %10))
    (set! %17 (or %16 %14))
    (set! %18 (or %17 (bv #x00003023 32)))
    (ret %18))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (enter! %3))

(define (@rv_lwu %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %1 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %2 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %5))
    (set! %11 (or %10 %7))
    (set! %12 (or %11 (bv #x00006003 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_ld %0 %1 %2)
; %3
  (define-label (%3) #:merge #f
    (set! %4 (zext %1 (bitvector 32)))
    (set! %5 (shl %4 (bv #x00000014 32)))
    (set! %6 (zext %2 (bitvector 32)))
    (set! %7 (shl %6 (bv #x0000000f 32)))
    (set! %8 (zext %0 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000007 32)))
    (set! %10 (or %9 %5))
    (set! %11 (or %10 %7))
    (set! %12 (or %11 (bv #x00003003 32)))
    (ret %12))

  (define-value %4)
  (define-value %5)
  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (enter! %3))

(define (@rv_amoadd_d %0 %1 %2 %3 %4)
; %5
  (define-label (%5) #:merge #f
    (set! %6 (shl %3 (bv #x01 8)))
    (set! %7 (or %6 %4))
    (set! %8 (zext %7 (bitvector 32)))
    (set! %9 (shl %8 (bv #x00000019 32)))
    (set! %10 (zext %1 (bitvector 32)))
    (set! %11 (shl %10 (bv #x00000014 32)))
    (set! %12 (zext %2 (bitvector 32)))
    (set! %13 (shl %12 (bv #x0000000f 32)))
    (set! %14 (zext %0 (bitvector 32)))
    (set! %15 (shl %14 (bv #x00000007 32)))
    (set! %16 (or %15 %11))
    (set! %17 (or %16 %13))
    (set! %18 (or %17 %9))
    (set! %19 (or %18 (bv #x0000302f 32)))
    (ret %19))

  (define-value %6)
  (define-value %7)
  (define-value %8)
  (define-value %9)
  (define-value %10)
  (define-value %11)
  (define-value %12)
  (define-value %13)
  (define-value %14)
  (define-value %15)
  (define-value %16)
  (define-value %17)
  (define-value %18)
  (define-value %19)
  (enter! %5))
